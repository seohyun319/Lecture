name: Vercel CD
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on: 
	pull_request:
		types: [opened, reopened, edited]
jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    outputs:
      deploymentUrl: ${{ steps.deploy-step.outputs.deploymentUrl }}
    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI # vercel ÏÑ§Ïπò
        run: npm install --global vercel@latest
      - name: Pull Vercel env information # vercelÏùò ÌôòÍ≤ΩÍ∞í Î∞õÏïÑÏò¥
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build project artifacts # ÎπåÎìúÌï®
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy project Artifacts to Vercel # ÎπåÎìúÌïú Í±∞Î°ú Î∞∞Ìè¨Ìï®
        id: deploy-step
        run: |
          vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} >deployment-url.txt
          echo "deploymentUrl=$(cat deployment-url.txt)" >> $GITHUB_OUTPUT
  Add-Comment:
    runs-on: ubuntu-latest
    needs: deploy-preview
    if: always()
    permissions: 
      issues: write
      pull-requests: write
    steps:
      - name: Comment to PR (Succeeded)
        env: 
          DEPLOYMENT_URL: ${{ needs.deploy-preview.outputs.deploymentUrl }}
        if: needs.deploy-preview.result == 'success'
        uses: actions/github-script@v6
        id: my-script1
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "üü¢ Deployed at ${{ env.DEPLOYMENT_URL }}"
            })
      - name: Comment to PR (Failure)
        if: needs.deploy-preview.result == 'failure'
        uses: actions/github-script@v6
        id: my-script2
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "üî¥ Failed to deploy preview"
            })
      - name: Comment to PR (cancelled)
        if: needs.deploy-preview.result == 'cancelled'
        uses: actions/github-script@v6
        id: my-script
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "‚ùå Cancelled to deploy preview"
            })